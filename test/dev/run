#!/bin/bash

DATA=$PWD/data
KEYS=$PWD/keys.json

SILENT=1
redirect() {
  if [ "$SILENT" -eq 1 ]; then
    "$@" > /dev/null 2>&1
  else
    "$@"
  fi
}

echo "=========================="
echo "Configuring new test setup"
echo "=========================="
echo

# Display software version for testers
GAIA_VERSION=`gaiad version`
echo "GAIA VERSION INFO: $GAIA_VERSION"
MTM_VERSION=`mtm version`
echo "MICROTICK VERSION INFO: $MTM_VERSION"
echo

# Ensure user understands what will be deleted
if [[ -d $DATA ]] && [[ ! "$1" == "skip" ]]; then
  echo "$(basename $0) will delete:"
  echo
  echo "- $HOME/.relayer"
  echo "- $DATA"
  echo "- $KEYS"
  echo
  read -p "Do you wish to continue? (y/n): " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 1
  fi
  echo
fi

echo "Stopping running processes"
echo "--------------------------"

redirect killall gaiad 
redirect killall mtm 

# Delete data from old runs
redirect rm -rf $CHAIN_DATA 
redirect rm -rf $HOME/.relayer 

# Setup chains
echo
echo "Chains"
echo "------"

node setup-chain.js $DATA ./gaiad.json
node seal-chain.js $DATA ./gaiad.json
redirect gaiad start --home $DATA/gaiad &
echo

node setup-chain.js $DATA ./microtick.json
if [ $? -ne 0 ]; then
  exit -1
fi
node seal-chain.js $DATA ./microtick.json
if [ $? -ne 0 ]; then
  exit -1
fi
redirect mtm start --home $DATA/microtick &
echo

# Governance

echo "Governance"
echo "----------"

echo "Letting chains stabilize..."
sleep 15

# backing change
echo "Submitting backing change proposal..."
redirect mtm tx gov submit-proposal microtick-denom-change --title "New backing proposal" --description "Use hub backing" ibc/BC599B88586F8C22E408569D7F6FAD40AEBF808A67D2051B86958CBB5F0A16B0 --home ./data/microtick --from governance --keyring-backend test --chain-id microtick --deposit 10000000stake -y 
echo "Voting yes on backing change proposal..."
redirect mtm tx gov vote 1 yes --from validator --home ./data/microtick --keyring-backend test --chain-id microtick -y
# create markets
echo "Submitting add markets proposal..."
redirect mtm tx gov submit-proposal microtick-add-markets --proposal ./add-market-proposal.json --home ./data/microtick --from governance --keyring-backend test --chain-id microtick --deposit 10000000stake -y
echo "Voting yes on add markets proposal..."
redirect mtm tx gov vote 2 yes --from validator --home ./data/microtick --keyring-backend test --chain-id microtick -y

# Relayer

echo
echo "Relayer"
echo "-------"

sleep 10
rly config init
rly config add-dir ./relayer

GAIAD_MNEMONIC=$(jq -r '.gaiad.relayer.mnemonic' ./keys.json)
GAIAD_CHAIN=$(jq -r '.chain_id' ./gaiad.json)
echo "Importing key $(rly keys restore $GAIAD_CHAIN testkey "$GAIAD_MNEMONIC")"

MTM_MNEMONIC=$(jq -r '.microtick.relayer.mnemonic' ./keys.json)
MTM_CHAIN=$(jq -r '.chain_id' ./microtick.json)
echo "Importing key $(rly keys restore $MTM_CHAIN testkey "$MTM_MNEMONIC")"

rly light init $GAIAD_CHAIN -f
rly light init $MTM_CHAIN -f

echo
echo "Linking chains"
echo "--------------"
rly tx link funding --timeout 10s
