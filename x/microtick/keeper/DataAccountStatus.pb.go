// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: microtick/v1beta1/keeper/DataAccountStatus.proto

package keeper

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DataAccountStatus struct {
	Account       github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=account,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"account"`
	ActiveQuotes  OrderedList                                   `protobuf:"bytes,2,opt,name=active_quotes,json=activeQuotes,proto3" json:"active_quotes"`
	ActiveTrades  OrderedList                                   `protobuf:"bytes,3,opt,name=active_trades,json=activeTrades,proto3" json:"active_trades"`
	PlacedQuotes  uint32                                        `protobuf:"varint,4,opt,name=placed_quotes,json=placedQuotes,proto3" json:"placed_quotes"`
	PlacedTrades  uint32                                        `protobuf:"varint,5,opt,name=placed_trades,json=placedTrades,proto3" json:"placed_trades"`
	QuoteBacking  types.DecCoin                                 `protobuf:"bytes,6,opt,name=quote_backing,json=quoteBacking,proto3" json:"quote_backing"`
	TradeBacking  types.DecCoin                                 `protobuf:"bytes,7,opt,name=trade_backing,json=tradeBacking,proto3" json:"trade_backing"`
	SettleBacking types.DecCoin                                 `protobuf:"bytes,8,opt,name=settle_backing,json=settleBacking,proto3" json:"settle_backing"`
}

func (m *DataAccountStatus) Reset()         { *m = DataAccountStatus{} }
func (m *DataAccountStatus) String() string { return proto.CompactTextString(m) }
func (*DataAccountStatus) ProtoMessage()    {}
func (*DataAccountStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e3af9d7eae24491, []int{0}
}
func (m *DataAccountStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DataAccountStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DataAccountStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DataAccountStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataAccountStatus.Merge(m, src)
}
func (m *DataAccountStatus) XXX_Size() int {
	return m.Size()
}
func (m *DataAccountStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DataAccountStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DataAccountStatus proto.InternalMessageInfo

func (m *DataAccountStatus) GetAccount() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *DataAccountStatus) GetActiveQuotes() OrderedList {
	if m != nil {
		return m.ActiveQuotes
	}
	return OrderedList{}
}

func (m *DataAccountStatus) GetActiveTrades() OrderedList {
	if m != nil {
		return m.ActiveTrades
	}
	return OrderedList{}
}

func (m *DataAccountStatus) GetPlacedQuotes() uint32 {
	if m != nil {
		return m.PlacedQuotes
	}
	return 0
}

func (m *DataAccountStatus) GetPlacedTrades() uint32 {
	if m != nil {
		return m.PlacedTrades
	}
	return 0
}

func (m *DataAccountStatus) GetQuoteBacking() types.DecCoin {
	if m != nil {
		return m.QuoteBacking
	}
	return types.DecCoin{}
}

func (m *DataAccountStatus) GetTradeBacking() types.DecCoin {
	if m != nil {
		return m.TradeBacking
	}
	return types.DecCoin{}
}

func (m *DataAccountStatus) GetSettleBacking() types.DecCoin {
	if m != nil {
		return m.SettleBacking
	}
	return types.DecCoin{}
}

func init() {
	proto.RegisterType((*DataAccountStatus)(nil), "microtick.keeper.DataAccountStatus")
}

func init() {
	proto.RegisterFile("microtick/v1beta1/keeper/DataAccountStatus.proto", fileDescriptor_9e3af9d7eae24491)
}

var fileDescriptor_9e3af9d7eae24491 = []byte{
	// 446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x63, 0xa0, 0x2d, 0x32, 0x36, 0xa2, 0x11, 0xa0, 0xa8, 0x02, 0x27, 0xe2, 0x14, 0x21,
	0x75, 0x97, 0x82, 0xc4, 0x89, 0x4b, 0x4c, 0x0f, 0x1c, 0x90, 0x10, 0x06, 0x21, 0xfe, 0x1c, 0xaa,
	0xf5, 0x7a, 0x14, 0x56, 0xa9, 0xbd, 0xc6, 0x3b, 0xae, 0x80, 0xa7, 0xe0, 0x19, 0x78, 0x9a, 0x1e,
	0x7b, 0xe4, 0x64, 0xa1, 0xe4, 0xd6, 0x47, 0xe0, 0x84, 0xbc, 0xbb, 0x8e, 0xed, 0x46, 0x48, 0xc0,
	0x29, 0xf9, 0x76, 0xf7, 0xfb, 0xcd, 0x37, 0x9e, 0x71, 0x1f, 0xa4, 0x82, 0x17, 0x12, 0x05, 0x5f,
	0xd0, 0x93, 0x83, 0x18, 0x90, 0x1d, 0xd0, 0x05, 0x40, 0x0e, 0x05, 0x3d, 0x64, 0xc8, 0x66, 0x9c,
	0xcb, 0x32, 0xc3, 0x57, 0xc8, 0xb0, 0x54, 0x24, 0x2f, 0x24, 0xca, 0xe1, 0x8d, 0xb5, 0x83, 0x98,
	0x97, 0x7b, 0x37, 0xe7, 0x72, 0x2e, 0xf5, 0x25, 0xad, 0xff, 0x99, 0x77, 0x7b, 0x01, 0x97, 0x2a,
	0x95, 0x8a, 0xc6, 0x4c, 0xc1, 0x9a, 0xcd, 0xa5, 0xc8, 0xec, 0xfd, 0xfd, 0x3f, 0x56, 0x7e, 0x51,
	0x24, 0x50, 0x40, 0xf2, 0x5c, 0x28, 0x34, 0x6f, 0xef, 0x7d, 0xdf, 0x72, 0x77, 0x37, 0xf2, 0x0c,
	0xdf, 0xb8, 0x3b, 0xcc, 0x1c, 0x8c, 0x9c, 0x89, 0x33, 0xf5, 0xc2, 0x27, 0xe7, 0xd5, 0xb8, 0x39,
	0xfa, 0x55, 0x8d, 0xf7, 0xe7, 0x02, 0x3f, 0x96, 0x31, 0xe1, 0x32, 0xa5, 0x36, 0x8c, 0xf9, 0xd9,
	0x57, 0xc9, 0x82, 0xe2, 0x97, 0x1c, 0x14, 0x99, 0x71, 0x3e, 0x4b, 0x92, 0x02, 0x94, 0x8a, 0x1a,
	0xe7, 0xf0, 0x9d, 0xeb, 0x33, 0x8e, 0xe2, 0x04, 0x8e, 0x3e, 0x95, 0x12, 0x41, 0x8d, 0x2e, 0x4d,
	0x9c, 0xe9, 0xb5, 0x87, 0x77, 0xc9, 0xc5, 0xce, 0x49, 0x27, 0x69, 0x78, 0xeb, 0xb4, 0x1a, 0x0f,
	0xce, 0xab, 0x71, 0xdf, 0x1b, 0x79, 0x46, 0xbe, 0xd4, 0xaa, 0x83, 0xc6, 0x82, 0x25, 0xa0, 0x46,
	0x97, 0xff, 0x07, 0x6d, 0xbc, 0x0d, 0xfa, 0xb5, 0x56, 0xc3, 0xc7, 0xae, 0x9f, 0x1f, 0x33, 0x0e,
	0x49, 0x93, 0xfa, 0xca, 0xc4, 0x99, 0xfa, 0xe1, 0x6e, 0xed, 0xeb, 0x5d, 0x44, 0x9e, 0x91, 0x36,
	0x52, 0xeb, 0xb3, 0x91, 0xb6, 0x36, 0x7c, 0x4d, 0x3d, 0x23, 0x6d, 0xbd, 0xb7, 0xae, 0xaf, 0x79,
	0x47, 0x31, 0xe3, 0x0b, 0x91, 0xcd, 0x47, 0xdb, 0xba, 0x95, 0x3b, 0xc4, 0x7c, 0x63, 0x52, 0xcf,
	0x9d, 0xd8, 0xc9, 0x92, 0x43, 0xe0, 0x4f, 0xa5, 0xc8, 0xda, 0x4e, 0x7a, 0xd6, 0xc8, 0xd3, 0x32,
	0x34, 0xaa, 0x26, 0xeb, 0x8a, 0x6b, 0xf2, 0xce, 0xbf, 0x90, 0x7b, 0xd6, 0xc8, 0xd3, 0xb2, 0x21,
	0x7f, 0x70, 0xaf, 0x2b, 0x40, 0x3c, 0x6e, 0xd1, 0x57, 0xff, 0x02, 0x7d, 0xdb, 0xa2, 0x2f, 0x78,
	0x23, 0xdf, 0x68, 0x0b, 0x0f, 0x9f, 0x9d, 0x2e, 0x03, 0xe7, 0x6c, 0x19, 0x38, 0x3f, 0x97, 0x81,
	0xf3, 0x6d, 0x15, 0x0c, 0xce, 0x56, 0xc1, 0xe0, 0xc7, 0x2a, 0x18, 0xbc, 0x27, 0x9d, 0x45, 0x6c,
	0xb7, 0x3e, 0xc5, 0xaf, 0x32, 0x03, 0xfa, 0xb9, 0x73, 0x64, 0x66, 0x1f, 0x6f, 0xeb, 0xad, 0x7f,
	0xf4, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xfb, 0xba, 0xdd, 0x64, 0x9d, 0x03, 0x00, 0x00,
}

func (m *DataAccountStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DataAccountStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DataAccountStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.SettleBacking.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDataAccountStatus(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	{
		size, err := m.TradeBacking.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDataAccountStatus(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	{
		size, err := m.QuoteBacking.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDataAccountStatus(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if m.PlacedTrades != 0 {
		i = encodeVarintDataAccountStatus(dAtA, i, uint64(m.PlacedTrades))
		i--
		dAtA[i] = 0x28
	}
	if m.PlacedQuotes != 0 {
		i = encodeVarintDataAccountStatus(dAtA, i, uint64(m.PlacedQuotes))
		i--
		dAtA[i] = 0x20
	}
	{
		size, err := m.ActiveTrades.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDataAccountStatus(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.ActiveQuotes.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDataAccountStatus(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintDataAccountStatus(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintDataAccountStatus(dAtA []byte, offset int, v uint64) int {
	offset -= sovDataAccountStatus(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DataAccountStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovDataAccountStatus(uint64(l))
	}
	l = m.ActiveQuotes.Size()
	n += 1 + l + sovDataAccountStatus(uint64(l))
	l = m.ActiveTrades.Size()
	n += 1 + l + sovDataAccountStatus(uint64(l))
	if m.PlacedQuotes != 0 {
		n += 1 + sovDataAccountStatus(uint64(m.PlacedQuotes))
	}
	if m.PlacedTrades != 0 {
		n += 1 + sovDataAccountStatus(uint64(m.PlacedTrades))
	}
	l = m.QuoteBacking.Size()
	n += 1 + l + sovDataAccountStatus(uint64(l))
	l = m.TradeBacking.Size()
	n += 1 + l + sovDataAccountStatus(uint64(l))
	l = m.SettleBacking.Size()
	n += 1 + l + sovDataAccountStatus(uint64(l))
	return n
}

func sovDataAccountStatus(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDataAccountStatus(x uint64) (n int) {
	return sovDataAccountStatus(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DataAccountStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataAccountStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DataAccountStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DataAccountStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = append(m.Account[:0], dAtA[iNdEx:postIndex]...)
			if m.Account == nil {
				m.Account = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveQuotes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ActiveQuotes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveTrades", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ActiveTrades.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlacedQuotes", wireType)
			}
			m.PlacedQuotes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlacedQuotes |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlacedTrades", wireType)
			}
			m.PlacedTrades = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlacedTrades |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuoteBacking", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.QuoteBacking.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TradeBacking", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TradeBacking.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SettleBacking", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SettleBacking.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataAccountStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDataAccountStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDataAccountStatus(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDataAccountStatus
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDataAccountStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDataAccountStatus
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDataAccountStatus
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDataAccountStatus
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDataAccountStatus        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDataAccountStatus          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDataAccountStatus = fmt.Errorf("proto: unexpected end of group")
)
